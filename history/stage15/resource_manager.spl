alias functionNum R1;
alias currentPID R2;
alias terminalStatus R4;
alias process_table R5;
alias state R6;

if (functionNum == 8) then
	terminalStatus = [TERMINAL_STATUS_TABLE];
	if (terminalStatus == 1) then
		process_table = PROCESS_TABLE + 16 * currentPID;
		[process_table + 4] = WAIT_TERMINAL;
		breakpoint;
		multipush(R1, R2, R3, R4, R5);
		call MOD_5;
		multipop(R1, R2, R3, R4, R5);
	endif;
	[TERMINAL_STATUS_TABLE] = 1;
	[TERMINAL_STATUS_TABLE + 1] = currentPID;
	return;
endif;

if (functionNum == 9) then
	if ([TERMINAL_STATUS_TABLE + 1] != currentPID) then
		R0 = -1;
		print "Error";
		return;
	endif;
	[TERMINAL_STATUS_TABLE] = 0;

	alias counter R7;
	counter = 0;
	breakpoint;
	while (counter < MAX_PROC_NUM) do
		process_table = PROCESS_TABLE + 16 * counter;
		state = [process_table + 4];
		if (state == WAIT_TERMINAL) then
			print ([process_table + 1]);
			[process_table + 4] = READY;
		endif;
		counter = counter + 1;
	endwhile;
	R0 = 0;
	return;
endif;
