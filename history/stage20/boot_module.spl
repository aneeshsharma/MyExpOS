// library
loadi(63, 13);
loadi(64, 14);

// inode and user table
loadi(59, 3);
loadi(60, 4);

// timer
loadi(4, 17);
loadi(5, 18);

// disk interrupt
loadi(6, 19);
loadi(7, 20);

// int7
loadi(16, 29);
loadi(17, 30);

// scheduler
loadi(50, 63);
loadi(51, 64);

// resource manager
loadi(40, 53);
loadi(41, 54);

// device manager
loadi(48, 61);
loadi(49, 62);

// int 6
loadi(14, 27);
loadi(15, 28);

// int 9
loadi(20, 33);
loadi(21, 34);

// process manager
loadi(42, 55);
loadi(43, 56);

// memory manager
loadi(44, 57);
loadi(45, 58);

// console interrupt
loadi(8, 21);
loadi(9, 22);

// init
loadi(65, 7);
loadi(66, 8);

// odd
loadi(90, 70);

// prime
loadi(100, 71);

// exit routine
loadi(22, 35);
loadi(23, 36);

// exception handler
loadi(2, 15);
loadi(3, 16);

// disk free list
loadi(61, 2);

// int 8
loadi(18, 31);
loadi(19, 32);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

// page table
// init
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

// Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";


// disk map table
[DISK_MAP_TABLE + 12] = -1;
[DISK_MAP_TABLE + 13] = -1;
[DISK_MAP_TABLE + 14] = 7;
[DISK_MAP_TABLE + 15] = 8;
[DISK_MAP_TABLE + 16] = -1;
[DISK_MAP_TABLE + 17] = -1;
[DISK_MAP_TABLE + 18] = -1;
[DISK_MAP_TABLE + 19] = -1;

alias pid R2;
alias process_table R3;

process_table = PROCESS_TABLE + 16 * 1;

// Process Table
// init
[process_table + 1] = 1;
[process_table + 4] = CREATED;
[process_table + 11] = 80;
[process_table + 12] = 0;
[process_table + 13] = 8 * 512;
[process_table + 14] = PAGE_TABLE_BASE + 20;
[process_table + 15] = 10;

pid = 2;
while (pid < MAX_PROC_NUM) do
	process_table = PROCESS_TABLE + 16 * pid;
	[process_table + 4] = TERMINATED;
	pid = pid + 1;
endwhile;

// initialize memory list
// all pages upto 82 (included) are used up
alias counter R4;
counter = 0;
while (counter <= 82) do
	[MEMORY_FREE_LIST + counter] = 1;
	counter = counter + 1;
endwhile;

counter = 83;
while (counter < 128) do
	[MEMORY_FREE_LIST + counter] = 0;
	counter = counter + 1;
endwhile;

[SYSTEM_STATUS_TABLE + 2] = 128 - 83;
[SYSTEM_STATUS_TABLE + 3] = 0;

[DISK_STATUS_TABLE] = 0;

counter = 1;
while (counter <= 8) do
	[80 * 512 + 512 - counter * 2] = -1;
	counter = counter + 1;
endwhile;

// terminal status to 0
[TERMINAL_STATUS_TABLE] = 0;

// entry point for init
[76*512] = [65*512 + 1];

print "Boot";
return;
