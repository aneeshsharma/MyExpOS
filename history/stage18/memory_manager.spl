alias function R1;

if (function == GET_FREE_PAGE) then
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;

	while ([SYSTEM_STATUS_TABLE + 2] == 0) do
		[PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 4] = WAIT_MEM;
		multipush(R1);
		call MOD_5;
		multipop(R1);
	endwhile;

	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
	[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

	alias counter R0;
	while (counter < MAX_MEM_PAGE) do
		if ([MEMORY_FREE_LIST + counter] == 0) then
			[MEMORY_FREE_LIST + counter] = 1;
			break;
		endif;
		counter = counter + 1;
	endwhile;

	// R0 now has free page no

	// return -1 if not found
	if (counter == MAX_MEM_PAGE) then
		R0 = -1;
	endif;
endif;

alias page_no R2;

if (function == RELEASE_PAGE) then
	[MEMORY_FREE_LIST + page_no] = [MEMORY_FREE_LIST + page_no] - 1;
	if ([MEMORY_FREE_LIST + page_no] == 0) then
		[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
	endif;

	alias i R3;
	alias process_table R4;
	while (i < MAX_PROC_NUM) do
		process_table = PROCESS_TABLE + 16 * i;
		if ([process_table + 4] == WAIT_MEM) then
			[process_table + 4] = READY;
		endif;
		i  = i + 1;
	endwhile;
endif;

return;
