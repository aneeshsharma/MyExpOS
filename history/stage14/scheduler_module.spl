alias currentPID R0;
alias process_table_entry R1;

multipush(BP);

currentPID = [SYSTEM_STATUS_TABLE + 1];
process_table_entry = PROCESS_TABLE + currentPID * 16;

[process_table_entry + 12] = SP % 512;
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;

alias newPID R2;
alias counter R4;
alias process_table R5;
alias state R6;
alias pid R7;

counter = currentPID + 1;
newPID = 0;
while (counter != currentPID) do
	process_table = PROCESS_TABLE + counter * 16;
	state = [process_table + 4];
	
	if (state == READY) then
		newPID = counter;
		break;
	endif;

	if (state == CREATED) then
		newPID = counter;
		break;
	endif;

	counter = counter + 1;
	if (counter >= MAX_PROC_NUM) then
		counter = 0;
	endif;
endwhile;

alias new_process_table R3;
new_process_table = PROCESS_TABLE + newPID * 16;
SP = [new_process_table + 11] * 512 + [new_process_table + 12];
PTBR = [new_process_table + 14];
PTLR = [new_process_table + 15];

[SYSTEM_STATUS_TABLE + 1] = newPID;

// if newly created
if([new_process_table + 4] == CREATED) then
	[new_process_table + 4] = RUNNING;
	[new_process_table + 9] = 0;
	SP = [new_process_table + 13];
	breakpoint;
	ireturn;
endif;

[new_process_table + 4] = RUNNING;

multipop(BP);

return;
