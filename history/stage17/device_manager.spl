alias functionNum R1;
alias currentPID R2;
alias word R3;

if (functionNum == TERMINAL_WRITE) then
	// acquire terminal
	multipush(R1, R2, R3);
	R1 = 8;
	// pid already in R2
	call MOD_0;
	multipop(R1, R2, R3);
	
	// print value
	print(word);
	
	// release terminal
	multipush(R1, R2, R3);
	R1 = 9;
	// pid already in R2
	call MOD_0;
	multipop(R1, R2, R3);
endif;

alias page_table R4;
alias logical_page R5;
alias physical_page R6;
alias physical_address R7;
if (functionNum == TERMINAL_READ) then
	multipush(R1, R2, R3);
	R1 = 8;
	// pid already in R2
	call MOD_0;
	multipop(R1, R2, R3);	
	read;
	
	[PROCESS_TABLE + currentPID * 16 + 4] = WAIT_TERMINAL;
	multipush(R1, R2, R3);
	call MOD_5;
	multipop(R1, R2, R3);
	page_table = PAGE_TABLE_BASE + 20 * currentPID;
	logical_page = word / 512;
	physical_page = [page_table + 2 * logical_page];
	physical_address = physical_page * 512 + word % 512;
	[physical_address] = [PROCESS_TABLE + currentPID * 16 + 8];
endif;

return;
